---
title: "Controle de versão com git, GitHub e RStudio"
author: "[Maurício Vancine](https://mauriciovancine.github.io/)<br>"
date: "06/05/2025"
date-format: long
format: 
  revealjs:
    theme: [custom.scss]
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
    chalkboard: true
    logo: "https://git-scm.com/images/logos/downloads/Git-Logo-1788C.png"
    execute:
      echo: true
      eval: true
      warning: false
      message: false
editor: source
lang: pt-br
---

# 
![](img/gif_delorean.gif){fig-align='center'}

# 14. Desfazer: git restore, git revert e git reset

## 14. Desfazer

::: columns
::: {.column width="80%" style="font-size: 80%;"}
<br>

1. `git restore`: desfaz alterações em arquivos no **working directory** ou **staging area**
1. `git revert`: desfaz um commit **preservando o histórico** (criando outro commit)
1. `git reset`:  desfaz um commit, podendo **deletar o histórico** (deletando commits)
:::

::: {.column width="20%"}
![](img/git_revert_reset.png){.absolute width=50% right=-100 top=100}
:::
:::

## 14. Desfazer

`git restore`: desfaz alterações em arquivos no **working directory** ou **staging area**




## 14. Desfazer

`git revert`: desfaz um commit **preservando o histórico** (criando outro commit)

- Sintaxe

```{r eval=FALSE}
# reverte um commit especifico
git revert [hash]
```

```{r eval=FALSE}
# reverter o ultimo commit
git revert HEAD
```

```{r eval=FALSE}
# cancelar uma reversao
git revert --abort
```

![](img/general_butterfly_effect.jpg)

## 14. Desfazer

`git revert`: desfaz um commit preservando o histórico (criando outro commit)

**IMPORTANTE!**

1. Deve-se trabalhar em um diretório de trabalho limpo. Executar sempre `git add` e `git commit` antes de tentar reverter um commit
1. Tente não **mudar** o passado!

## 14. Desfazer

`git revert`: desfaz um commit preservando o histórico (criando outro commit)

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
nothing to commit, working tree clean
```

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
f9f2e9c (HEAD -> master) mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

## 14. Desfazer

`git revert`: desfaz um commit preservando o histórico (criando outro commit)

```{r eval=FALSE}
git revert f9f2e9c
```
```{r eval=FALSE}
Revert "mod2 test.txt"

This reverts commit f9f2e9c867cfd549d0efcab1519a5ec9d86e7d0d.

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# On branch master
# Changes to be committed:
#       modified:   test.txt
#
```

## 14. Desfazer

`git revert`: desfaz um commit preservando o histórico (criando outro commit)

```{r eval=FALSE}
git revert f9f2e9c
```
```{r eval=FALSE}
[master fca02a2] Revert "mod2 test.txt"
 1 file changed, 1 insertion(+), 3 deletions(-)
```

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
nothing to commit, working tree clean
```

## 14. Desfazer

`git revert`: desfaz um commit preservando o histórico (criando outro commit)

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
fca02a2 (HEAD -> master) Revert "mod2 test.txt"
f9f2e9c mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

![](img/git_reset.png)

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

```{r eval=FALSE}
git reset [modo] [arquivo|commit]
```

**Aplicações**

- descartar commits em um branch privado
- desfazer alterações não comitadas (branch privado)
- tirar arquivos da área de staged

**Observações**

- descartar commits de um branch público: `git revert`
- descartar alterações no diretório de trabalho: **git checkout**

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

- **--soft**: não reseta o índice ou o diretório de trabalho (modo seguro)
- **--mixed (default)**: reseta o índice, mas não o diretório de trabalho (modo seguro)
- **--hard**: reseta o índice e o diretório de trabalho (modo não seguro)

![](img/git_reset_modes2.png), ![](img/git_reset_modes.png)

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

- Reseta a *staging area* (retira os arquivos) para corresponder ao commit mais recente, sem modificar o *working directory*

**git reset test.txt**

Retira o test.txt da *staging area*, sem modificar o *working directory*

**git reset --hard**

Reseta a *staging area* e o *working directory* para corresponder ao commit mais recente. Todas as alterações no diretório são sobrescritas

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

**git reset <commit>**

Move a versão para o commit indicado, reseta a *staging area* para corresponder a ele, mas não modifica o *working directory*

**git reset <commit> --hard**

Move a versão para o commit indicado e reseta tanto a *staging area*, quanto o *working directory* para corresponder ao commit especificado

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
nothing to commit, working tree clean
```

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

Vamos editar o arquivo "test.txt"

```{r eval=FALSE}
Acabo de inserir uma edição ao meu arquivo
Viagens no tempo podem ser perigosas...
```

![](img/general_bloco_notas.png){fig-align='center'}

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")
```

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Adicionar

```{r eval=FALSE}
git add -Av
```
```{r eval=FALSE}
add 'test.txt'
```

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Estado

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Remover do staged area

### Resetar

```{r eval=FALSE}
git reset test.txt
```
```{r eval=FALSE}
Unstaged changes after reset:
M	test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Estado

```{r eval=FALSE}
git status
```
```{r eval=FALSE}
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Ver o conteúdo do arquivo

```{r eval=FALSE}
cat test.txt
```
```{r eval=FALSE}
Acabo de inserir uma edição ao meu arquivo
Viagens no tempo podem ser perigosas...
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Histórico

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
fca02a2 (HEAD -> master) Revert "mod2 test.txt"
f9f2e9c mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Adicionar

```{r eval=FALSE}
git add -Av
```
```{r eval=FALSE}
add 'test.txt'
```

### Commitar

```{r eval=FALSE}
git commit -m "mod3 test.txt"
```
```{r eval=FALSE}
[master 4b0c4e8] mod3 test.txt
 1 file changed, 2 insertions(+), 1 deletion(-)
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Histórico

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
4b0c4e8 (HEAD -> master) mod3 test.txt
fca02a2 Revert "mod2 test.txt"
f9f2e9c mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Resetar

```{r eval=FALSE}
git reset --hard f9f2e9c
```
```{r eval=FALSE}
HEAD is now at f9f2e9c mod2 test.txt
```

--

### Histórico

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
f9f2e9c (HEAD -> master) mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Remover arquivo

```{r eval=FALSE}
rm test.txt
```

### Adicionar

```{r eval=FALSE}
git add -Av
```

### Commitar

```{r eval=FALSE}
git commit -m "rem text.txt"
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

### Histórico

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
6a417c5 (HEAD -> master) rem text.txt
f9f2e9c mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

---

## 14. Desfazer

`git reset`:  desfaz um commit deletando o histórico (deletando commits)

```{r eval=FALSE}
git reset --hard f9f2e9c
```
```{r eval=FALSE}
HEAD is now at f9f2e9c mod2 test.txt
```

```{r eval=FALSE}
git log --oneline
```
```{r eval=FALSE}
f9f2e9c (HEAD -> master) mod2 test.txt
dcbd894 mod test.txt
8b33bc5 add test.txt
```

![](img/gif_cat_ohh.gif)

![](img/general_butterfly_effect.jpg)
